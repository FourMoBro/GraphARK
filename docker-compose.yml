version: "3.8"

services:
    timescale:
        image: timescale/timescaledb:latest-pg12
        container_name: timescale_gark
        restart: unless-stopped
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
        volumes:
            - ./pg-database:/var/lib/postgresql/data
        networks:
            - gark_network
    
    pgadmin:
        container_name: pgadmin_gark
        image: dpage/pgadmin4
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
        ports:
            - 5050:80
        depends_on:
            - timescale
        networks:
            - gark_network
    
    jupyterlab:
        container_name: jupyter_gark
        env_file:
            - .env
        build: ./notebooks
        ports:
            - "8888:8888"
        volumes:
            - ./notebooks:/home/jovyan/work
        networks:
            - gark_network
    
    fastapi:
        container_name: fast_gark
        env_file:
            - .env
        build: ./fastapi
        command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
        volumes:
            - ./fastapi:/app
        ports:
            - 8000:8000
        depends_on:
            - timescale
        restart: always
        networks:
            - gark_network

    mongodb:
        container_name: mongodb_gark
        image: mongo:5.0.2
        volumes:
        - ./mongo-database:/data/db
        ports:
        - "27017:27017"
        environment:
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
        restart: 
            always
        networks:
            - gark_network

    mongoexpress:
        image: mongo-express
        container_name: mongoexp_gark
        ports:
            - "8081:8081"
        depends_on:
            - mongodb
        environment: 
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}            
            - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=${ME_CONFIG_MONGODB_ENABLE_ADMIN}
            - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
            - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
        networks:
            - gark_network
networks:
    gark_network:
        name: gark_network

    # neo4j:
    #     container_name: neo4j_gark
    #     image: neo4j:4.3.0-enterprise
    #     restart: always
    #     volumes: 
    #         - ./neo-database/data:/data
    #         - ./neo-database/import:/import
    #         - ./neo-database/plugins:/plugins
    #         - ./neo-database/conf:/conf
    #     ports:
    #         - 7474:7474
    #         - 7687:7687
    #     environment:
    #         - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    #         - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
    #         - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
    #         - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    #         - NEO4J_dbms_memory_pagecache_size=8G
    #         - NEO4j_dbms_memory_heap_initial__size=8G
    #         - NEO4J_dbms_memory_heap_max__size=16G
        
    